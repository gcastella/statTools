% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/statTools_code_OTHER.R
\name{getPval}
\alias{getBetaSd}
\alias{getORCI}
\alias{getPval}
\alias{verticalgetBetaSd}
\alias{verticalgetORCI}
\alias{verticalgetPval}
\title{Extracting P-values, Coefficients or OR (95\% CI) from a lm or glm object}
\usage{
getPval(model, vars = 2)

getBetaSd(model, vars = 2)

getORCI(model, vars = 2, between = ";")

verticalgetPval(model, vars = grep(pattern = "invar", x = names(model$coef)),
  reference = 1)

verticalgetBetaSd(model, vars = grep(pattern = "invar", x =
  names(model$coef)), reference = 1)

verticalgetORCI(model, vars = grep(pattern = "invar", x = names(model$coef)),
  between = ";", reference = 1)
}
\arguments{
\item{model}{glm or lm object.}

\item{between}{String for collapsing lower and upper limits of the CI.}

\item{reference}{Which value is the refference level in case of categorical variable?.}

\item{var}{Vector for extracting values from the summary(model)$coef matrix. Row 1 is for the intercept.}
}
\value{
A vector with p-values, Beta's(SD) or OR (95\% CI)
}
\description{
Functions for fancy printing P-values, Coefficients or OR (95\% CI) from glm object. Prepared for \code{\link{bivarTable}} FUN.model.
}
\details{
These functions are mainly thought to be used in the bivarTable FUN.model argument. The first argument has to be a model.
They all get some information from the model (OR, p-values, coefficients, etc.) and display them as a vector. 
The vertical version of the functions, return a one column matrix with the results: one value for each level of the variable.
Appends "Ref." or "1" to the reference level. In case of quantitative input variable, the output is the same
for the vertical and non-vertical versions. See examples.
}
\section{Functions}{
\itemize{
\item \code{getBetaSd}: Get the coefficients of the model and SD from lm or glm.

\item \code{getORCI}: For glm models, get the OR and 95\% CI.

\item \code{verticalgetPval}: Vertical version of getPval. Used in bivarTable.

\item \code{verticalgetBetaSd}: Vertical version of getBetaSd. Used in bivarTable.

\item \code{verticalgetORCI}: Vertical version of getORCI. Used in bivarTable.
}}
\examples{
m <- glm(I(Sepal.Width > 3) ~ Species + Sepal.Length, iris, family = binomial)
getPval(m, vars = -1) # p-values from everything but the intercept
getPval(m, vars = 2:3) # p-values from rows 2 and 3 of the matrix
getPval(m, vars = grep(pattern = "Species", x = names(m$coeff))) # or coefficients from Species
getORCI(m, vars = 2:3)
getBetaSd(m, vars = 2:3)

verticalgetBetaSd(m, vars = grep("Species", x = names(m$coeff)), reference = 1)
verticalgetPval(m, vars = grep("Species", x = names(m$coeff)), reference = 1)
verticalgetORCI(m, vars = grep("Species", x = names(m$coeff)), reference = 1)

bivarTable(I(Sepal.Width > 3) ~ . - Sepal.Length - Sepal.Width, data = iris,  
           fit.model = list(adjusted = ~ . + Sepal.Length), # model to fit for every variable in rhs of the formula.
           outcome = 2, # the output of the models is the variable in the column (lhs of formula)
           FUN.model = list(adjusted = c("verticalgetBetaSd", "verticalgetORCI", "verticalgetPval"))) # add columns with extra info for the adjusted model.

}
\seealso{
\code{\link{GoF}}, \code{\link{nagelkerke}}
}

